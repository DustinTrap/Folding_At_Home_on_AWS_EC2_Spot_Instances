---
# This playbook is for setting up a an AWS Ubuntu instance for fold at home

- hosts: all
  remote_user: ubuntu
# If ansible_ssh_user is not root, ansible_sudo must be set to true
  sudo: true
#  become: yes
  vars: 
    createuser: 'username'
    createpassword: 'r3dh4t1!'
  gather_facts: False
  pre_tasks:
    - name: Install python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python)
      changed_when: False
    - setup: # aka gather_facts
  tasks:
# install packages needed for vnc  
  - name: Install packages
    apt:
      name:
      - ubuntu-desktop
      - vnc4server
      - python-gnome2
      - gnome-panel
      - gnome-settings-daemon
      - metacity
      - nautilus
      - gnome-terminal
      - python-pexpect
      state: latest
# install python support for f@h  
  - name: Download python-support
    get_url:
      url: http://launchpadlibrarian.net/109052632/python-support_1.0.15_all.deb
      dest: /root/python-support_1.0.15_all.deb
  
  - name: Install python python-support
    apt: deb="/root/python-support_1.0.15_all.deb"
  
  # - name: Setup | create user
  #   command: useradd -m {{ createuser }} creates=/home/{{ createuser }}
  
  # - name: Setup | set user password
  #   shell: usermod -p $(echo '{{ createpassword }}' | openssl passwd -1 -stdin) {{ createuser }}
  
  # - name: Sudoers | update sudoers file and validate
  #   lineinfile: "dest=/etc/sudoers
  #     insertafter=EOF
  #     line='{{ createuser }} ALL=(ALL) NOPASSWD: ALL'
  #     regexp='{{ createuser }} ALL=(ALL) NOPASSWD: ALL'
  #     state=present"
# Enable password auth for ssh
  - name: Enable Password Authentication
    lineinfile:
          dest=/etc/ssh/sshd_config
          regexp='^PasswordAuthentication'
          line="PasswordAuthentication yes"
          state=present
# Restart SSH
  - name: Restart service sshd, in all cases
    service:
      name: sshd
      state: restarted
# Create our vnc directory
  - name: "Create the remote /root/.vnc directory"
    file:
      path: /root/.vnc
      mode: 0755
      state: directory
# Create vnc passwd file with password
  - name: "Generate vnc password for root user remotely"
    expect:
      command: vncserver
      responses:
        Password: 'putapasswordhere'
        Verify: 'putapasswordhere' 
# Kill first vnc server run
  - name: Ensure vncserver service is started
    shell: |
        vncserver -kill :1
# Remove xstartup file
  - name: Remove file (delete file)
    file:
      path: /root/.vnc/xstartup
      state: absent
# Update xstartup config
  - name: Copy a new xstartup file into place
    copy:
      src: /mnt/data/xstartup
      dest: /root/.vnc/xstartup
      backup: no
# Change permissions on xstartup file
  - name: Change permissions on xstartup file
    shell: |
        chmod 777 /root/.vnc/xstartup
# Start VNC for first time
  - name: Ensure vncserver service is started
    shell: |
        vncserver
# Download Fold at Home client packages
  - name: Download fold at home client
    get_url:
      url: https://download.foldingathome.org/releases/public/release/fahclient/debian-testing-64bit/v7.4/fahclient_7.4.4_amd64.deb
      dest: /root/fahclient_7.4.4_amd64.deb
# Download Fold at Home controler packages
  - name: Download fold at home controler
    get_url:
      url: https://download.foldingathome.org/releases/public/release/fahcontrol/debian-testing-64bit/v7.4/fahcontrol_7.4.4-1_all.deb
      dest: /root/fahcontrol_7.4.4-1_all.deb
# Create fahclient folder
  - name: Create fahclient folder
    shell: |
        mkdir /etc/fahclient
# Update fahclient config
  - name: Copy a new config file into place
    copy:
      src: /mnt/data/config.xml
      dest: /etc/fahclient/config.xml
      backup: no
# Install fahclient
  - name: Install fahclient
    apt: deb="/root/fahclient_7.4.4_amd64.deb"
# Install fahcontroler
  - name: Install fahcontroler
    apt: deb="/root/fahcontrol_7.4.4-1_all.deb"